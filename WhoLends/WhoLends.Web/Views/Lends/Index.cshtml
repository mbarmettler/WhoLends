@using WhoLends.ViewModels;
@using GridMvc.Html

@model List<LendViewModel>

@{
    ViewBag.Title = "Lends";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Request.IsAuthenticated)
{
    <br />
    <div class="row">
        <div class="col-md-4">
            <div class="thumbnail">
                <div class="caption">
                    <h3>Gegenstand ausleihen</h3>
                    <p>
                        Einen neuen Gegenstand ausleihen
                    </p>
                    <br />
                    <p>
                        @Html.ActionLink(" erfassen", "Create", null, new { @class = "btn btn-default" })
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="thumbnail">
                <div class="caption">
                    <h3>Ausleihgegenstand</h3>
                    <p>
                        Einen neuen Gegenstand zum Ausleihen
                    </p>
                    <br/>
                    <p>
                        @Html.ActionLink(" erfassen", "../LendItems/Create", null, new { @class = "btn btn-default" })
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="thumbnail">
                <div class="caption">
                    <h3><span class="label label-warning">BETA</span> Benachrichtigungen</h3>
                    <p>
                        E-Mail Benachrichtigungen für Termine oder fällige Rückgaben.
                    </p>
                    <p><a class="btn btn-default" href="#">Verwalten &raquo;</a></p>
                </div>
            </div>
        </div>
    </div>
    <br />
    <h3>Ausgeliehene Gegenstände</h3>

    <div>
        @Html.Grid(Model).Columns(
            columns =>
            {
                columns.Add().Titled("Detail").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink(" ", "Details", new {id = c.Id}, new {@class = "btn btn-primary glyphicon glyphicon-search"}));
                columns.Add(c => c.Id).Titled("ID");
                columns.Add(c => c.SelectedLendUser.UserName).Titled("Ausleiher").Filterable(true);
                columns.Add(c => c.From).Titled("Von").Filterable(true);
                columns.Add(c => c.To).Titled("Bis").Filterable(true);
                columns.Add(c => c.SelectedLendItem.Name).Titled("Gegenstand Name").Filterable(true);
                columns.Add(c => c.SelectedLendItem.CustomerId).Titled("interne ID").Filterable(true);
                columns.Add(c => c.CreatedAt).Titled("Erstellt am").Filterable(true);
                columns.Add(c => c.CreatedBy.UserName).Titled("Erstellt von").Filterable(true);
                //if (Model.CurrentUser.RoleId == 1)
                columns.Add().Titled("Edit").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink(" ", "Edit", new {id = c.Id}, new {@class = "btn btn-default fa fa-pencil"}));
                columns.Add().Titled("Delete").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink(" ", "Delete", new {id = c.Id}, new {@class = "btn btn-danger glyphicon glyphicon-trash"}));
                columns.Add().Titled("Return").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink(" ", "../LendReturns/Create", new {id = c.Id}, new {@class = "btn btn-success glyphicon glyphicon-share-alt"}));
            }).WithPaging(10).Sortable(true)
    </div>
}
